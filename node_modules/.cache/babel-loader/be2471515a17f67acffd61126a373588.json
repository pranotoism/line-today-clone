{"ast":null,"code":"import { GET_DATA_WAITING, GET_DATA_SUCCESS, GET_DATA_FAILED } from \"./constants\";\nimport axios from \"axios\";\nexport const fetchDataSuccess = payload => {\n  return {\n    type: GET_DATA_SUCCESS,\n    payload: payload\n  };\n};\nexport const fetchDataFailure = error => {\n  return {\n    type: GET_DATA_FAILED,\n    error: error\n  };\n};\nconst getUrl = 'https://today.line.me/id/portaljson';\nconsole.log(getUrl, 'test');\nexport const fetchData = () => {\n  return async function (dispatch) {\n    axios.get(`https://today.line.me/id/portaljson`).then(response => {\n      console.log('masuk');\n      const dataCategory = response.data.result.categories;\n      const dataTab = response.data.result.categoryList;\n      const payload = {\n        categories: [],\n        categoryTab: []\n      };\n      const categories = dataCategory.map(categories => {\n        var obj = {\n          name: \"\",\n          articleCategory: []\n        };\n        obj[\"articleCategory\"] = categories.templates;\n        obj[\"name\"] = categories.name;\n        return obj;\n      });\n      const categoryTab = dataTab.map(categories => {\n        var obj = {\n          name: \"\",\n          highlight: false\n        };\n\n        if (categories.highlight !== undefined) {\n          obj[\"highlight\"] = categories.highlight.enable;\n        }\n\n        obj[\"name\"] = categories.name;\n        return obj;\n      });\n      payload[\"categories\"] = categories;\n      payload[\"categoryTab\"] = categoryTab;\n      console.log(payload, 'payload');\n      dispatch(fetchDataSuccess(payload));\n    }).catch(err => {\n      console.log(err);\n      dispatch(fetchDataFailure(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/pranoto/Documents/SejutaCita/line-today-clone/src/Containers/App/redux/action.js"],"names":["GET_DATA_WAITING","GET_DATA_SUCCESS","GET_DATA_FAILED","axios","fetchDataSuccess","payload","type","fetchDataFailure","error","getUrl","console","log","fetchData","dispatch","get","then","response","dataCategory","data","result","categories","dataTab","categoryList","categoryTab","map","obj","name","articleCategory","templates","highlight","undefined","enable","catch","err"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,eAHJ,QAIO,aAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,IAAY;AACxC,SAAO;AACHC,IAAAA,IAAI,EAACL,gBADF;AAEHI,IAAAA,OAAO,EAAGA;AAFP,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,KAAD,IAAW;AACvC,SAAO;AACHF,IAAAA,IAAI,EAACJ,eADF;AAEHM,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,MAAMC,MAAM,GAAG,qCAAf;AACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,MAApB;AAEA,OAAO,MAAMG,SAAS,GAAG,MAAK;AAC1B,SAAO,gBAAeC,QAAf,EAAyB;AAE5BV,IAAAA,KAAK,CAACW,GAAN,CAAW,qCAAX,EACKC,IADL,CACYC,QAAD,IAAc;AACjBN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMM,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC,UAA1C;AACA,YAAMC,OAAO,GAAGL,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBG,YAArC;AACA,YAAMjB,OAAO,GAAG;AAACe,QAAAA,UAAU,EAAC,EAAZ;AAAgBG,QAAAA,WAAW,EAAE;AAA7B,OAAhB;AACA,YAAMH,UAAU,GAAGH,YAAY,CAACO,GAAb,CAAkBJ,UAAD,IAAgB;AAChD,YAAIK,GAAG,GAAG;AAACC,UAAAA,IAAI,EAAC,EAAN;AAAUC,UAAAA,eAAe,EAAC;AAA1B,SAAV;AACAF,QAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyBL,UAAU,CAACQ,SAApC;AACAH,QAAAA,GAAG,CAAC,MAAD,CAAH,GAAcL,UAAU,CAACM,IAAzB;AACA,eAAOD,GAAP;AACH,OALkB,CAAnB;AAMA,YAAMF,WAAW,GAAGF,OAAO,CAACG,GAAR,CAAaJ,UAAD,IAAgB;AAC5C,YAAIK,GAAG,GAAG;AAACC,UAAAA,IAAI,EAAC,EAAN;AAAWG,UAAAA,SAAS,EAAE;AAAtB,SAAV;;AACA,YAAGT,UAAU,CAACS,SAAX,KAAyBC,SAA5B,EAAsC;AAClCL,UAAAA,GAAG,CAAC,WAAD,CAAH,GAAmBL,UAAU,CAACS,SAAX,CAAqBE,MAAxC;AACH;;AACDN,QAAAA,GAAG,CAAC,MAAD,CAAH,GAAcL,UAAU,CAACM,IAAzB;AACA,eAAOD,GAAP;AACH,OAPmB,CAApB;AAQApB,MAAAA,OAAO,CAAC,YAAD,CAAP,GAAwBe,UAAxB;AACAf,MAAAA,OAAO,CAAC,aAAD,CAAP,GAAyBkB,WAAzB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqB,SAArB;AACAQ,MAAAA,QAAQ,CAACT,gBAAgB,CAACC,OAAD,CAAjB,CAAR;AACH,KAxBL,EAyBK2B,KAzBL,CAyBaC,GAAD,IAAS;AACbvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ;AACApB,MAAAA,QAAQ,CAACN,gBAAgB,CAAC0B,GAAD,CAAjB,CAAR;AACH,KA5BL;AA6BH,GA/BD;AAgCH,CAjCM","sourcesContent":["import {\n    GET_DATA_WAITING,\n    GET_DATA_SUCCESS,\n    GET_DATA_FAILED\n} from \"./constants\"\n\nimport axios from \"axios\"\n\nexport const fetchDataSuccess = (payload) =>{\n    return {\n        type:GET_DATA_SUCCESS,\n        payload : payload\n    }\n}\n\nexport const fetchDataFailure = (error) => {\n    return {\n        type:GET_DATA_FAILED,\n        error: error\n    }\n}\n\nconst getUrl = 'https://today.line.me/id/portaljson'\nconsole.log(getUrl, 'test');\n\nexport const fetchData = () =>{\n    return async function(dispatch) {\n        \n        axios.get(`https://today.line.me/id/portaljson`)\n            .then( (response) => {\n                console.log('masuk');\n                const dataCategory = response.data.result.categories\n                const dataTab = response.data.result.categoryList\n                const payload = {categories:[], categoryTab: []}\n                const categories = dataCategory.map((categories) => {\n                    var obj = {name:\"\", articleCategory:[]}\n                    obj[\"articleCategory\"] = categories.templates\n                    obj[\"name\"] = categories.name\n                    return obj\n                })\n                const categoryTab = dataTab.map((categories) => {\n                    var obj = {name:\"\" , highlight: false}\n                    if(categories.highlight !== undefined){\n                        obj[\"highlight\"] = categories.highlight.enable\n                    }\n                    obj[\"name\"] = categories.name\n                    return obj\n                })\n                payload[\"categories\"] = categories;\n                payload[\"categoryTab\"] = categoryTab\n                console.log(payload, 'payload')\n                dispatch(fetchDataSuccess(payload))\n            })\n            .catch( (err) => {\n                console.log(err);\n                dispatch(fetchDataFailure(err))\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}